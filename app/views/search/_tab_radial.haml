%p
  The radial search will return all objects in the SkyMapper catalogue that fall within the search radius of the specified right ascension and declination. All values are in decimal degrees.
%p
  The system currently supports a maximum search radius of 10Â°.
%p 
  The web interface is limited to displaying the first 1000 results of a query.
  = get_tap_download_limit_msg
  

.form-container{ 'ng-controller' => 'SearchController', 'ng-init' => "init('#rad_modal')" }
  %form#radial_search_form.cancel{ name: 'radial_search_form', 'ng-submit' => "fetchResults('radial_search_form', '#{radial_search_path}')", novalidate: '' }
    %fieldset
      .row-fluid
        .span6
          %label{ for: :catalogue }
            SkyMapper survey:
          %select#catalogue{ 'ng-model' => 'form.catalogue', name: 'catalogue', required: '',
            'ng-init' => "setInput('catalogue', '#{session_param('radial', :catalogue)}')" }
            %option{ value: :fs }
              Five-Second Survey
            %option{ value: :ms }
              Main Survey
          %ul.error{ 'ng-show' => '(submitted || radial_search_form.catalogue.$dirty) && radial_search_form.catalogue.$invalid' }
            %li.error{ 'ng-show' => 'radial_search_form.catalogue.$error.required' }
              This field is required.

      .row-fluid
        .span6
          %label{ for: :ra }
            Right ascension (deg):
          %input#ra{ type: 'text', name: 'ra', 'ng-model' => 'form.ra', required: '', ravalidate: '', rarange: '[0, 360)',
            'ng-init' => "setInput('ra', '#{session_param('radial', :ra)}')" }
          %ul.error{ 'ng-show' => '(submitted || radial_search_form.ra.$dirty) && radial_search_form.ra.$invalid' }
            %li.error{ 'ng-show' => 'radial_search_form.ra.$error.required' }
              This field is required.
            %li.error{ 'ng-show' => 'radial_search_form.ra.$error.ravalidate' }
              This field should be a number in one of the following formats HH:MM:SS.S or HH MM SS.S or DDD.DD.
            %li.error{ 'ng-show' => 'radial_search_form.ra.$error.rarange' }
              Value in degrees should be a number greater than or equal to 0 and less than or equal to 360.
        .span6
          %label{ for: :dec }
            Declination (deg):
          %input#dec{ type: 'text', name: 'dec', 'ng-model' => 'form.dec', required: '', decvalidate: '',  decrange: '[-90, 90]',
            'ng-init' => "setInput('dec', '#{session_param('radial', :dec)}')" }
          %ul.error{ 'ng-show' => '(submitted || radial_search_form.dec.$dirty) && radial_search_form.dec.$invalid' }
            %li.error{ 'ng-show' => 'radial_search_form.dec.$error.required' }
              This field is required.
            %li.error{ 'ng-show' => 'radial_search_form.dec.$error.decrange' }
              Value in degrees should be a number greater than or equal to -90 and less than or equal to 90.
            %li.error{ 'ng-show' => 'radial_search_form.dec.$error.decvalidate' }
              This field should be a number in one of the following formats DD:MM:SS.S or DD MM SS.S or DDD.DD.


      .row-fluid
        .span6
          %label{ for: :sr }
            Search radius (deg):
          %input#sr{ type: 'text', name: 'sr', 'ng-model' => 'form.sr', required: '', range: '(0, 10]', decimal: 6,
            'ng-init' => "setInput('sr', '#{session_param('radial', :sr, 0.05)}')" }
          %ul.error{ 'ng-show' => '(submitted || radial_search_form.sr.$dirty) && radial_search_form.sr.$invalid' }
            %li.error{ 'ng-show' => 'radial_search_form.sr.$error.required' }
              This field is required.
            %li.error{ 'ng-show' => 'radial_search_form.sr.$error.range' }
              This field should be a number greater than 0 and less than or equal to 10.
            %li.error{ 'ng-show' => 'radial_search_form.sr.$error.decimal' }
              This field should be a number with a maximum of 6 decimal places.

      = render partial: 'search_filter', locals: { form: 'radial_search_form', filter: 'u', type: 'radial' }
      = render partial: 'search_filter', locals: { form: 'radial_search_form', filter: 'v', type: 'radial' }
      = render partial: 'search_filter', locals: { form: 'radial_search_form', filter: 'g', type: 'radial' }
      = render partial: 'search_filter', locals: { form: 'radial_search_form', filter: 'r', type: 'radial' }
      = render partial: 'search_filter', locals: { form: 'radial_search_form', filter: 'i', type: 'radial' }
      = render partial: 'search_filter', locals: { form: 'radial_search_form', filter: 'z', type: 'radial' }

    .form-actions
      %input#submit.btn.btn-primary{ type: 'submit', value: 'Search SkyMapper'}
      = check_box_tag 'async', nil, false,'ng-model' => 'form.async'
      = label_tag 'async', 'Asynchronous Query'

      = render partial: 'async_popup', locals: { form: 'radial_search_form', modal_id: 'rad_modal' }
